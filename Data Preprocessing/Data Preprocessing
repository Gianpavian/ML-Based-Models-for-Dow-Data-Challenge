##Import package

from google.colab import drive
import pandas as pd
import numpy as np
from scipy import stats
from sklearn.feature_selection import mutual_info_regression as MIC

##Loading the dataset

drive.mount('/content/drive') #Mount Google Drive to the Colab notebook environment in order to access the data
df = pd.read_csv('drive/MyDrive/Project/DataSet_Raw.csv') #Load Train Dataset
df_test = pd.read_csv('drive/MyDrive/Project/Dataset_Test.csv') #Load Validating Dataset

##Missing Value Imputation

df = df.interpolate()
df_test = df_test.interpolate()

##Outlier Remover

df = df[(np.abs(stats.zscore(df)) < 3).all(axis=1)]
df_test = df_test[(np.abs(stats.zscore(df_test)) < 3).all(axis=1)]

##Generating X And Y
#Generating Y in train dataset
y = df.iloc[:,-3].to_numpy() #extracts the values from the third-to-last column of the DataFrame df and stores them in a NumPy array "y"

#generating X in train dataset
X = df.iloc[:,0:-3] #selects a subset of the DataFrame df by taking all rows and excluding the last three columns
X_n = df.iloc[:,-2:,]  #extracts the values from the last two columns
X = X.join(X_n) #Merge X_n with X

#Generating Y in validating dataset
y_test = df_test.iloc[:,-3].to_numpy() #extracts the values from the third-to-last column of the DataFrame df and stores them in a NumPy array "y"

#generating X in validating dataset
X_test = df_test.iloc[:,0:-3] #selects a subset of the DataFrame df by taking all rows and excluding the last three columns
X_test_n = df_test.iloc[:,-2:,]  #extracts the values from the last two columns
X_test = X_test.join(X_test_n) #Merge X_n with X

##Feature Selection
mi_score = MIC(X,y) #calculating the Mutual Information between X and Y
fs = SelectKBest(score_func=MIC, k=10) #select the top 10 features based on a mi score

fs.fit(X, y) #fits the feature selection to the data
X_fs = fs.transform(X) #generating feature selected X data by transforming feature matrix to keep only the selected features
X_test_fs = fs.transform(X_test) #generating feature selected X_test data by transforming feature matrix to keep only the selected features

##Save the refined dataset
np.savetxt("X_Train.csv", X_fs, delimiter=",")
np.savetxt("X_Test.csv", X_test_fs, delimiter=",")
np.savetxt("y_Train.csv", y, delimiter=",")
np.savetxt("y_Test.csv", y_test, delimiter=",")

